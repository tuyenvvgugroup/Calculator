{"ast":null,"code":"import typed from 'typed-function';\nimport { get, arraySize } from './array.js';\nimport { typeOf as _typeOf } from './is.js';\n\n/**\n * Simplifies a callback function by reducing its complexity and potentially improving its performance.\n *\n * @param {Function} callback The original callback function to simplify.\n * @param {Array|Matrix} array The array that will be used with the callback function.\n * @param {string} name The name of the function that is using the callback.\n * @returns {Function} Returns a simplified version of the callback function.\n */\nexport function optimizeCallback(callback, array, name) {\n  if (typed.isTypedFunction(callback)) {\n    var firstIndex = (array.isMatrix ? array.size() : arraySize(array)).map(() => 0);\n    var firstValue = array.isMatrix ? array.get(firstIndex) : get(array, firstIndex);\n    var hasSingleSignature = Object.keys(callback.signatures).length === 1;\n    var numberOfArguments = _findNumberOfArguments(callback, firstValue, firstIndex, array);\n    var fastCallback = hasSingleSignature ? Object.values(callback.signatures)[0] : callback;\n    if (numberOfArguments >= 1 && numberOfArguments <= 3) {\n      return function () {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        return _tryFunctionWithArgs(fastCallback, args.slice(0, numberOfArguments), name, callback.name);\n      };\n    }\n    return function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      return _tryFunctionWithArgs(fastCallback, args, name, callback.name);\n    };\n  }\n  return callback;\n}\nfunction _findNumberOfArguments(callback, value, index, array) {\n  var testArgs = [value, index, array];\n  for (var i = 3; i > 0; i--) {\n    var args = testArgs.slice(0, i);\n    if (typed.resolve(callback, args) !== null) {\n      return i;\n    }\n  }\n}\n\n/**\n   * @param {function} func The selected function taken from one of the signatures of the callback function\n   * @param {Array} args List with arguments to apply to the selected signature\n   * @param {string} mappingFnName the name of the function that is using the callback\n   * @param {string} callbackName the name of the callback function\n   * @returns {*} Returns the return value of the invoked signature\n   * @throws {TypeError} Throws an error when no matching signature was found\n   */\nfunction _tryFunctionWithArgs(func, args, mappingFnName, callbackName) {\n  try {\n    return func(...args);\n  } catch (err) {\n    _createCallbackError(err, args, mappingFnName, callbackName);\n  }\n}\n\n/**\n * Creates and throws a detailed TypeError when a callback function fails.\n *\n * @param {Error} err The original error thrown by the callback function.\n * @param {Array} args The arguments that were passed to the callback function.\n * @param {string} mappingFnName The name of the function that is using the callback.\n * @param {string} callbackName The name of the callback function.\n * @throws {TypeError} Throws a detailed TypeError with enriched error message.\n */\nfunction _createCallbackError(err, args, mappingFnName, callbackName) {\n  var _err$data;\n  // Enrich the error message so the user understands that it took place inside the callback function\n  if (err instanceof TypeError && ((_err$data = err.data) === null || _err$data === void 0 ? void 0 : _err$data.category) === 'wrongType') {\n    var argsDesc = [];\n    argsDesc.push(\"value: \".concat(_typeOf(args[0])));\n    if (args.length >= 2) {\n      argsDesc.push(\"index: \".concat(_typeOf(args[1])));\n    }\n    if (args.length >= 3) {\n      argsDesc.push(\"array: \".concat(_typeOf(args[2])));\n    }\n    throw new TypeError(\"Function \".concat(mappingFnName, \" cannot apply callback arguments \") + \"\".concat(callbackName, \"(\").concat(argsDesc.join(', '), \") at index \").concat(JSON.stringify(args[1])));\n  } else {\n    throw new TypeError(\"Function \".concat(mappingFnName, \" cannot apply callback arguments \") + \"to function \".concat(callbackName, \": \").concat(err.message));\n  }\n}","map":{"version":3,"names":["typed","get","arraySize","typeOf","_typeOf","optimizeCallback","callback","array","name","isTypedFunction","firstIndex","isMatrix","size","map","firstValue","hasSingleSignature","Object","keys","signatures","length","numberOfArguments","_findNumberOfArguments","fastCallback","values","_len","arguments","args","Array","_key","_tryFunctionWithArgs","slice","_len2","_key2","value","index","testArgs","i","resolve","func","mappingFnName","callbackName","err","_createCallbackError","_err$data","TypeError","data","category","argsDesc","push","concat","join","JSON","stringify","message"],"sources":["C:/JavaScript/node_modules/mathjs/lib/esm/utils/optimizeCallback.js"],"sourcesContent":["import typed from 'typed-function';\nimport { get, arraySize } from './array.js';\nimport { typeOf as _typeOf } from './is.js';\n\n/**\n * Simplifies a callback function by reducing its complexity and potentially improving its performance.\n *\n * @param {Function} callback The original callback function to simplify.\n * @param {Array|Matrix} array The array that will be used with the callback function.\n * @param {string} name The name of the function that is using the callback.\n * @returns {Function} Returns a simplified version of the callback function.\n */\nexport function optimizeCallback(callback, array, name) {\n  if (typed.isTypedFunction(callback)) {\n    var firstIndex = (array.isMatrix ? array.size() : arraySize(array)).map(() => 0);\n    var firstValue = array.isMatrix ? array.get(firstIndex) : get(array, firstIndex);\n    var hasSingleSignature = Object.keys(callback.signatures).length === 1;\n    var numberOfArguments = _findNumberOfArguments(callback, firstValue, firstIndex, array);\n    var fastCallback = hasSingleSignature ? Object.values(callback.signatures)[0] : callback;\n    if (numberOfArguments >= 1 && numberOfArguments <= 3) {\n      return function () {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        return _tryFunctionWithArgs(fastCallback, args.slice(0, numberOfArguments), name, callback.name);\n      };\n    }\n    return function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      return _tryFunctionWithArgs(fastCallback, args, name, callback.name);\n    };\n  }\n  return callback;\n}\nfunction _findNumberOfArguments(callback, value, index, array) {\n  var testArgs = [value, index, array];\n  for (var i = 3; i > 0; i--) {\n    var args = testArgs.slice(0, i);\n    if (typed.resolve(callback, args) !== null) {\n      return i;\n    }\n  }\n}\n\n/**\n   * @param {function} func The selected function taken from one of the signatures of the callback function\n   * @param {Array} args List with arguments to apply to the selected signature\n   * @param {string} mappingFnName the name of the function that is using the callback\n   * @param {string} callbackName the name of the callback function\n   * @returns {*} Returns the return value of the invoked signature\n   * @throws {TypeError} Throws an error when no matching signature was found\n   */\nfunction _tryFunctionWithArgs(func, args, mappingFnName, callbackName) {\n  try {\n    return func(...args);\n  } catch (err) {\n    _createCallbackError(err, args, mappingFnName, callbackName);\n  }\n}\n\n/**\n * Creates and throws a detailed TypeError when a callback function fails.\n *\n * @param {Error} err The original error thrown by the callback function.\n * @param {Array} args The arguments that were passed to the callback function.\n * @param {string} mappingFnName The name of the function that is using the callback.\n * @param {string} callbackName The name of the callback function.\n * @throws {TypeError} Throws a detailed TypeError with enriched error message.\n */\nfunction _createCallbackError(err, args, mappingFnName, callbackName) {\n  var _err$data;\n  // Enrich the error message so the user understands that it took place inside the callback function\n  if (err instanceof TypeError && ((_err$data = err.data) === null || _err$data === void 0 ? void 0 : _err$data.category) === 'wrongType') {\n    var argsDesc = [];\n    argsDesc.push(\"value: \".concat(_typeOf(args[0])));\n    if (args.length >= 2) {\n      argsDesc.push(\"index: \".concat(_typeOf(args[1])));\n    }\n    if (args.length >= 3) {\n      argsDesc.push(\"array: \".concat(_typeOf(args[2])));\n    }\n    throw new TypeError(\"Function \".concat(mappingFnName, \" cannot apply callback arguments \") + \"\".concat(callbackName, \"(\").concat(argsDesc.join(', '), \") at index \").concat(JSON.stringify(args[1])));\n  } else {\n    throw new TypeError(\"Function \".concat(mappingFnName, \" cannot apply callback arguments \") + \"to function \".concat(callbackName, \": \").concat(err.message));\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}